version: '3.8'

services:
  example-mongo-1:
    container_name: example-mongo-1
    image: mongo:6.0.13
    command: mongod --keyFile /keys/example.key --bind_ip_all --replSet example_rs
#    command: mongod --bind_ip_all --replSet example_rs
    volumes:
      - ./data-files/data-1:/data/db
      - ./keys/example.key:/keys/example.key
    networks:
      example-mongo-network:
        aliases:
          - example-mongo-1.localhost
        ipv4_address: 172.20.0.2
    ports:
      - 27017:27017
    depends_on:
      - example-mongo-2
    restart: always

  example-mongo-2:
    container_name: example-mongo-2
    image: mongo:6.0.13
    command: mongod --keyFile /keys/example.key --bind_ip_all --replSet example_rs
#    command: mongod --bind_ip_all --replSet example_rs
    volumes:
      - ./data-files/data-2:/data/db
      - ./keys/example.key:/keys/example.key
    networks:
      example-mongo-network:
        aliases:
          - example-mongo-2.localhost
        ipv4_address: 172.20.0.3
    ports:
      - 27018:27017
    restart: always

  init-example-replica-set:
    container_name: init-replica-set
    image: mongo:6.0.13
    restart: no
    depends_on:
      - example-mongo-1
      - example-mongo-2
    command:
      - /bin/sh
      - -c 
      - | 
        sleep 5;
        mongosh --host host.docker.internal:27017 --eval '
            var db = (new Mongo("example-mongo-1:27017")).getDB("test");    
            var config = { 
              "_id": "example_rs",
              "version": 1,
              "members": [
                {
                  "_id": 1,
                  "host": "example-mongo-1:27017",
                  "priority": 1,
                },
                {
                  "_id": 2,
                  "host": "example-mongo-2:27017",
                  "priority": 2,
                }
             ]
            };
            rs.initiate(config, { force: true });
            //rs.initiate(config);
            rs.status();
          ';      
    networks:
      example-mongo-network:

networks:
  example-mongo-network:
    name: example-mongo-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.254